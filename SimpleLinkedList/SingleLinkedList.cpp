#pragma once

#include "SingleLinkedList.h"

#include <iostream>


//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
SingleLinkedList::SingleLinkedList()
{
	head = nullptr;
}

//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
void SingleLinkedList::view()
{
	Node* temp = head;
	
	while(temp)
	{
		std::cout << std::endl << temp->data;
		temp = temp->next;
	}
}

//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
void SingleLinkedList::addFront(int n)
{
	Node* node = new Node(n, head);
	head       = node;
}

//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
void SingleLinkedList::remove(int n)
{
	Node* temp = head;

	while(temp->next && temp->next->data != n)
		temp = temp->next;

	if(temp)
	{
		temp->next = temp->next->next;
	}
}

//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
SingleLinkedList::~SingleLinkedList()
{

}

//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
bool SingleLinkedList::find(int n)
{
	Node* temp = head;

	while(temp && temp->data != n)
		temp = temp->next;

	return temp;
}

//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
SingleLinkedList::Node::Node(int data, Node* next /*= nullptr*/) : data(data), next(next)
{

}
