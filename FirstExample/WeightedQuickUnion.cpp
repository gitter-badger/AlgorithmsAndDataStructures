#include "WeightedQuickUnion.h"


//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
WeightedQuickUnion::WeightedQuickUnion(int nrNodes) : UnionFindTemplate(nrNodes)
{

}

//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
void WeightedQuickUnion::Initialize()
{
	if(!id.empty())
		id.clear();

	for(int i=0; i<nrNodes; i++)
		id.push_back(i);
}

//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
bool WeightedQuickUnion::Connected(int p, int q)
{
	int temp;
	return root(p, temp) == root(q, temp);
}

//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
void WeightedQuickUnion::Union(int p, int q)
{
	int sizeI;
	int i = root(p, sizeI);

	int sizeJ;
	int j = root(q, sizeJ);

	// we avoid one line trees and by balancing the tree
	if(sizeI < sizeJ)
		id[i] = j; // connect the small tree to the big tree
	else
		id[j] = i; // connect the big tree to the small tree
}

//__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
int WeightedQuickUnion::root(int i, int& treeSize)
{
	treeSize = 0;

	while(i != id[i])
	{
		i = id[i];
		treeSize++;
	}

	return i;
}
